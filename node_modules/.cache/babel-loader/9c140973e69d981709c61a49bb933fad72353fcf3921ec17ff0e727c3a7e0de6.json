{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AppContext=/*#__PURE__*/createContext();export const AppProvider=_ref=>{let{children}=_ref;const[isDarkMode,setIsDarkMode]=useState(false);const[isLoading,setIsLoading]=useState(false);const[user,setUser]=useState(null);const[notifications,setNotifications]=useState([]);useEffect(()=>{// Check for saved theme preference\nconst savedTheme=localStorage.getItem('theme');if(savedTheme){setIsDarkMode(savedTheme==='dark');}else{// Check system preference\nconst prefersDark=window.matchMedia('(prefers-color-scheme: dark)').matches;setIsDarkMode(prefersDark);}},[]);useEffect(()=>{// Apply theme\nif(isDarkMode){document.documentElement.classList.add('dark');localStorage.setItem('theme','dark');}else{document.documentElement.classList.remove('dark');localStorage.setItem('theme','light');}},[isDarkMode]);const toggleDarkMode=()=>{setIsDarkMode(!isDarkMode);};const addNotification=function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';const id=Date.now();setNotifications(prev=>[...prev,{id,message,type}]);setTimeout(()=>{setNotifications(prev=>prev.filter(n=>n.id!==id));},5000);};const value={isDarkMode,toggleDarkMode,isLoading,setIsLoading,user,setUser,notifications,addNotification};return/*#__PURE__*/_jsx(AppContext.Provider,{value:value,children:children});};export const useApp=()=>{const context=useContext(AppContext);if(context===undefined){throw new Error('useApp must be used within an AppProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AppContext","AppProvider","_ref","children","isDarkMode","setIsDarkMode","isLoading","setIsLoading","user","setUser","notifications","setNotifications","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","document","documentElement","classList","add","setItem","remove","toggleDarkMode","addNotification","message","type","arguments","length","undefined","id","Date","now","prev","setTimeout","filter","n","value","Provider","useApp","context","Error"],"sources":["C:/Users/THIS PC/newweb/src/context/AppContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Check for saved theme preference\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme) {\r\n      setIsDarkMode(savedTheme === 'dark');\r\n    } else {\r\n      // Check system preference\r\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      setIsDarkMode(prefersDark);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Apply theme\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  const addNotification = (message, type = 'info') => {\r\n    const id = Date.now();\r\n    setNotifications(prev => [...prev, { id, message, type }]);\r\n    setTimeout(() => {\r\n      setNotifications(prev => prev.filter(n => n.id !== id));\r\n    }, 5000);\r\n  };\r\n\r\n  const value = {\r\n    isDarkMode,\r\n    toggleDarkMode,\r\n    isLoading,\r\n    setIsLoading,\r\n    user,\r\n    setUser,\r\n    notifications,\r\n    addNotification\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useApp = () => {\r\n  const context = useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error('useApp must be used within an AppProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,UAAU,cAAGN,aAAa,CAAC,CAAC,CAElC,MAAO,MAAM,CAAAO,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACa,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACe,aAAa,CAAEC,gBAAgB,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAEtDE,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAe,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,GAAIF,UAAU,CAAE,CACdP,aAAa,CAACO,UAAU,GAAK,MAAM,CAAC,CACtC,CAAC,IAAM,CACL;AACA,KAAM,CAAAG,WAAW,CAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAC7Eb,aAAa,CAACU,WAAW,CAAC,CAC5B,CACF,CAAC,CAAE,EAAE,CAAC,CAENlB,SAAS,CAAC,IAAM,CACd;AACA,GAAIO,UAAU,CAAE,CACde,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAC9CT,YAAY,CAACU,OAAO,CAAC,OAAO,CAAE,MAAM,CAAC,CACvC,CAAC,IAAM,CACLJ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACG,MAAM,CAAC,MAAM,CAAC,CACjDX,YAAY,CAACU,OAAO,CAAC,OAAO,CAAE,OAAO,CAAC,CACxC,CACF,CAAC,CAAE,CAACnB,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAqB,cAAc,CAAGA,CAAA,GAAM,CAC3BpB,aAAa,CAAC,CAACD,UAAU,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAsB,eAAe,CAAG,QAAAA,CAACC,OAAO,CAAoB,IAAlB,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,MAAM,CAC7C,KAAM,CAAAG,EAAE,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CACrBvB,gBAAgB,CAACwB,IAAI,EAAI,CAAC,GAAGA,IAAI,CAAE,CAAEH,EAAE,CAAEL,OAAO,CAAEC,IAAK,CAAC,CAAC,CAAC,CAC1DQ,UAAU,CAAC,IAAM,CACfzB,gBAAgB,CAACwB,IAAI,EAAIA,IAAI,CAACE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACN,EAAE,GAAKA,EAAE,CAAC,CAAC,CACzD,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAO,KAAK,CAAG,CACZnC,UAAU,CACVqB,cAAc,CACdnB,SAAS,CACTC,YAAY,CACZC,IAAI,CACJC,OAAO,CACPC,aAAa,CACbgB,eACF,CAAC,CAED,mBACE3B,IAAA,CAACC,UAAU,CAACwC,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAApC,QAAA,CAC/BA,QAAQ,CACU,CAAC,CAE1B,CAAC,CAED,MAAO,MAAM,CAAAsC,MAAM,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAAAC,OAAO,CAAG9C,UAAU,CAACI,UAAU,CAAC,CACtC,GAAI0C,OAAO,GAAKX,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAY,KAAK,CAAC,2CAA2C,CAAC,CAC9D,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}