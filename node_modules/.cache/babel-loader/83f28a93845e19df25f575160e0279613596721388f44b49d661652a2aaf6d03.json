{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THIS PC\\\\newweb\\\\src\\\\context\\\\AppContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nexport const AppProvider = ({\n  children\n}) => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState(null);\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    // Check for saved theme preference\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    } else {\n      // Check system preference\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setIsDarkMode(prefersDark);\n    }\n  }, []);\n  useEffect(() => {\n    // Apply theme\n    if (isDarkMode) {\n      document.documentElement.classList.add('dark');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      localStorage.setItem('theme', 'light');\n    }\n  }, [isDarkMode]);\n  const toggleDarkMode = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n  const addNotification = (message, type = 'info') => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, {\n      id,\n      message,\n      type\n    }]);\n    setTimeout(() => {\n      setNotifications(prev => prev.filter(n => n.id !== id));\n    }, 5000);\n  };\n  const value = {\n    isDarkMode,\n    toggleDarkMode,\n    isLoading,\n    setIsLoading,\n    user,\n    setUser,\n    notifications,\n    addNotification\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"4xb9mII1fnBsP+FjbrwFB2boHVM=\");\n_c = AppProvider;\nexport const useApp = () => {\n  _s2();\n  const context = useContext(AppContext);\n  if (context === undefined) {\n    throw new Error('useApp must be used within an AppProvider');\n  }\n  return context;\n};\n_s2(useApp, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","AppContext","AppProvider","children","_s","isDarkMode","setIsDarkMode","isLoading","setIsLoading","user","setUser","notifications","setNotifications","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","document","documentElement","classList","add","setItem","remove","toggleDarkMode","addNotification","message","type","id","Date","now","prev","setTimeout","filter","n","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useApp","_s2","context","undefined","Error","$RefreshReg$"],"sources":["C:/Users/THIS PC/newweb/src/context/AppContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Check for saved theme preference\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme) {\r\n      setIsDarkMode(savedTheme === 'dark');\r\n    } else {\r\n      // Check system preference\r\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      setIsDarkMode(prefersDark);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Apply theme\r\n    if (isDarkMode) {\r\n      document.documentElement.classList.add('dark');\r\n      localStorage.setItem('theme', 'dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n      localStorage.setItem('theme', 'light');\r\n    }\r\n  }, [isDarkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  const addNotification = (message, type = 'info') => {\r\n    const id = Date.now();\r\n    setNotifications(prev => [...prev, { id, message, type }]);\r\n    setTimeout(() => {\r\n      setNotifications(prev => prev.filter(n => n.id !== id));\r\n    }, 5000);\r\n  };\r\n\r\n  const value = {\r\n    isDarkMode,\r\n    toggleDarkMode,\r\n    isLoading,\r\n    setIsLoading,\r\n    user,\r\n    setUser,\r\n    notifications,\r\n    addNotification\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useApp = () => {\r\n  const context = useContext(AppContext);\r\n  if (context === undefined) {\r\n    throw new Error('useApp must be used within an AppProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}